Transient meshes don't seem to be released properly in 100% of the cases
 - Might be related to creating/destroying GUI elements?

Test custom resources:
 - Can I load them? (Will likely need ProjectLIbrary::load)
 - Can I reference them in Component and will the reference be held after after cloning?

ARRAY TODO:
 - Need a GUIFoldout that doesn't have BG and is just a single button.

TODO:
 - Ensure fields aren't updated from the app when in focus
 - Entire foldout should be clickable, not just the toggle button
 - Properly hook up UndoRedo, for both in-field and object-wide changes
   - How do I track Ctrl+Z and Ctrl+Y keys? And in general how do I distinguish when I send
     input to the game and when to the editor.
 - GUIColor needs to be hooked up to a window that actually changes its value.
 - Inspector scrolling
 - Editor fields don't have a minimum width value?
 - When editor field is small enough the label can overlap the input field

KEEP IN MIND:
 - Clicking on an object/resource in inspector should ping it in their window















































----------------------------------------------

Various trivial fixes:
 - Add icons to array clone/delete/up/down buttons

LATER:
 - Add support for list, dictionary and multi-rank array types
 - Add tabbing between fields

A way to close a window & destroy a GUI panel!
 - Will likely need to refactor ScriptEditorWindow as currently it performs initialization
   in constructor and destroy in destructor, but open/close will be called within its lifetime
 - Also a way to get notified if the window gets closed from C++
 - Once closed the referenced GUIPanels should no longer work (set "destroyed" flag?)
 - What about calling Destroy on a GUIPanel?
   - It should notify owning EditorWindow

Ensure that setting depth for GUIArea works properly. It's not properly implemented yet.

UndoRedo should work on URI type basis where it remembers object ID, and path across its fields to the field that was modified
 - This way it wont keep an unnecessary reference to object
 - SerializableField should probably be the type responsible for handling the URI
 - Will I need two different URI types for resources and scene objects?
   - Probably, resources don't need hierarchies, but I think I should ignore resources for now as I'm not sure they will be using Inspectable system
 - When trying to undo/redo and object id cannot be found, it just skips it
 - When recompiling clear the undo/redo queue

 ----------------------

 Non-inspector:
  - Deleting first entry in input field moves the cursor incorrectly
  - Test if parsing int/float value from int/float field actually works
  - ProfilerOverlay elements are constantly dirty? even though I'm not calling update

Undocking a window wont remove the tabbed title bar
While dragging an undocked window, dropping it over the main window (not over dock overlays) will not restore it

 - GameObjectField
   - When dragging over GameObjectField cursor needs to change depending whether drop will be accepted or not
   - How will I limit it to just certain component types?

Add InsertElement to GUILayout