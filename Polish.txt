Polish TODO:
 - Add frustum culling
 - Implement RenderQueue sorting with support for sort type, priority and separable pass
    - Use a hash list(containing type, queue, layer, etc.) for faster sorting
 - Finalize example with resolution settings and proper GUI
 - Finish documentation (BansheeEngine + TODO UNDOCUMENTED)

 - Add license text to all files
 - Make a separate release branch with no editor/script stuff, and without .txt files and other development data

Re-test gamepad buttons now that XInput is active

-----------------

Not so critical
  - I have a feeling DX9 might start crashing once I resize to sub-fullscreen res and go back to FS - test it
  - Add VSync toggle to RenderWindow if it doesn't already exist.
  - Test creating a fullscreen window on window creation.
  - Refactor GUIElement & GUIElementBase
     - Sprite rendering methods should probably be marked as internal (possibly others too)
       - A lot could be made private
     - Has two methods for retrieveing ElementType
     - getVisibleBounds doesn't make sense
  - Make hierarchical documentation. Organize stuff based on type. Once I actually generate the documentation add Doxygen grouping tags (or whatever they're called)
  - There's still a crash regarding an uninitialized mCachedPtr on a C# class when shutting down. Attempt to find consistent repro steps.
  - Make a Getting Started guide, along with the example project. Or just finish up the manual.
  - Compress and generate mips for texture on input (testing NVTT stuff)
  - Perform optimizations as needed to get reasonable performance
  - Consider removing SceneManager from Core? I two scene manager base classes.
  - GpuParamBlockBuffer and GpuParams::cloneForCore are very clumsy in how they deal in keeping two separate param blocks. Rethink this a bit.